@model CapaDato.Models.Tarea

@{
    ViewBag.Title = "Create";
    var minDate = DateTime.Now.ToString("yyyy-MM-dd");
}


@using (Html.BeginForm("Create", "Tarea", FormMethod.Post, htmlAttributes: new {@class = "card shadow"})) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal card-body">
        <h4>Nueva tarea</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Titulo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Titulo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Titulo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Descripcion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FechaEstimadaEntrega, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FechaEstimadaEntrega, new { htmlAttributes = new { @class = "form-control", @type = "date", @min = minDate }, @value = minDate })
                @Html.ValidationMessageFor(model => model.FechaEstimadaEntrega, "", new { @class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PrioridadId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(s => s.PrioridadId, selectList: ViewBag.Prioridades as SelectList, optionLabel: "Seleccione", htmlAttributes: new {@class = "form-select"})
                @Html.ValidationMessageFor(model => model.PrioridadId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EstadoId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(s => s.EstadoId, selectList: ViewBag.Estados as SelectList, optionLabel: "Seleccione", htmlAttributes: new { @class = "form-select" })
                @Html.ValidationMessageFor(model => model.EstadoId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoriaId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(s => s.CategoriaId, selectList: ViewBag.Categorias as SelectList, optionLabel: "Seleccione", htmlAttributes: new { @class = "form-select" })
                @Html.ValidationMessageFor(model => model.CategoriaId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UsuarioAsignadoId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(s => s.UsuarioAsignadoId, selectList: ViewBag.Usuarios as SelectList, optionLabel: "Seleccione", htmlAttributes: new { @class = "form-select" })
                @Html.ValidationMessageFor(model => model.UsuarioAsignadoId, "", new { @class = "text-danger" })
            </div>
        </div>

        @if(ViewBag.errMessage != null)
        {
            <div class="alert alert-danger my-3" role="alert">
                @ViewBag.errMessage
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        <div class="form-group my-3">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Crear" class="btn btn-success" />
                @Html.ActionLink("Cancelar", "Index", "Tarea", htmlAttributes: new {@class = "btn btn-outline-danger", @type = "button" })
            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
